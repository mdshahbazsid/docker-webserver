networks:
    custom-docker-network:
      external: false
      name: custom-docker-network

services:
  webserver:
    container_name: ${PHP_VERSION}_${SERVICE_USER}_webserver
    build:
      context: .
      dockerfile: .docker/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        COMPOSER_VERSION: ${COMPOSER_VERSION}
        APACHE_USER: ${APP_USER}
        USER_ID: ${USER_ID:-0}
    volumes:
      - ./src:/var/www/html
      - ./.docker/custom-php.ini:/usr/local/etc/php/conf.d/custom-php.ini
      - ./.docker/auth.json:/home/${APP_USER}/.composer/auth.json
    ports:
      - "${PORT_WEBSERVER:-80}:80" # Expose HTTP
      - "${PORT_SSL:-443}:443"     # Expose HTTPS
    depends_on:
      - mysql-db
    networks:
      - custom-docker-network

  mysql-db:
    image: mariadb:${MARIA_DB_VERSION}
    container_name: ${PHP_VERSION}_${SERVICE_USER}_mysql-db
    restart: always
    ports:
      - "${PORT_MYSQL:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    volumes:
      - .db-data:/var/lib/mysql
      - ./.docker/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - custom-docker-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${PHP_VERSION}_${SERVICE_USER}_phpmyadmin
    links:
      - mysql-db
    ports:
      - "${PORT_PHPMYADMIN:-8081}:80"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - PMA_USER=${DB_ROOT_USER}
      - PMA_PASSWORD=${DB_ROOT_PASSWORD}
      - PMA_HOST=mysql-db

    networks:
      - custom-docker-network

  varnish:
    container_name: ${PHP_VERSION}_${SERVICE_USER}_varnish
    image: varnish:${VARNISH_VERSION}
    ports:
      - "${PORT_VARNISH:-8082}:80"
    volumes:
      - ./.docker/varnish.vcl:/etc/varnish/default.vcl
    depends_on:
      - webserver
    links:
      - webserver
    networks:
      - custom-docker-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION}
    container_name: ${PHP_VERSION}_${SERVICE_USER}_elasticsearch
    environment:
      - cluster.name=elasticsearch-docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./.es-data:/usr/share/elasticsearch/data
    ports:
      - "${PORT_ELASTICSEARCH:-9200}:9200"
    tty: true
    networks:
      - custom-docker-network
      
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${PHP_VERSION}_${SERVICE_USER}_mailhog
    restart: always
    ports:
      - "${PORT_MAILHOG_SMTP:-1025}:1025"
      - "${PORT_MAILHOG_UI:-8025}:8025"
    networks:
      - custom-docker-network

      
